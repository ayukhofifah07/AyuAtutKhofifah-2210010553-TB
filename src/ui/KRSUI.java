
package ui;

import dao.KRSDAO;
import dao.MahasiswaDAO;
import model.KRSModel;
import model.MahasiswaModel;
import utils.KRSPrint;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.util.ArrayList;
import java.util.List;

public class KRSUI extends javax.swing.JFrame {

    public KRSUI() {
        initComponents();
        populateComboBoxMahasiswa();
        loadTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lblTitle = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblIdBuku = new javax.swing.JLabel();
        lblJudul = new javax.swing.JLabel();
        lblPengarang = new javax.swing.JLabel();
        lblHarga = new javax.swing.JLabel();
        btnCetak = new javax.swing.JButton();
        txtIDKRS = new javax.swing.JTextField();
        txtKodeMK = new javax.swing.JTextField();
        txtSKS = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        btnTambah = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnBatal = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblKRS = new javax.swing.JTable();
        lblHarga1 = new javax.swing.JLabel();
        txtNamaMK = new javax.swing.JTextField();
        cmbMahasiswa = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(100, 341));

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("FORM KRS");
        getContentPane().add(lblTitle, java.awt.BorderLayout.PAGE_START);

        jPanel1.setPreferredSize(new java.awt.Dimension(700, 500));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        lblIdBuku.setText("ID KRS");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipady = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 13, 0, 6);
        jPanel1.add(lblIdBuku, gridBagConstraints);

        lblJudul.setText("Mahasiswa");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipady = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(6, 13, 6, 6);
        jPanel1.add(lblJudul, gridBagConstraints);

        lblPengarang.setText("Kode MK");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipady = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 13, 0, 6);
        jPanel1.add(lblPengarang, gridBagConstraints);

        lblHarga.setText("SKS");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipady = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 13, 0, 6);
        jPanel1.add(lblHarga, gridBagConstraints);

        btnCetak.setText("Cetak");
        btnCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCetakActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 6, 0);
        jPanel1.add(btnCetak, gridBagConstraints);

        txtIDKRS.setEditable(false);
        txtIDKRS.setFocusable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.insets = new java.awt.Insets(8, 47, 8, 19);
        jPanel1.add(txtIDKRS, gridBagConstraints);

        txtKodeMK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKodeMKActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.insets = new java.awt.Insets(8, 47, 8, 19);
        jPanel1.add(txtKodeMK, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.insets = new java.awt.Insets(8, 47, 8, 19);
        jPanel1.add(txtSKS, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 13, 0, 13);
        jPanel2.add(btnTambah, gridBagConstraints);

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 13, 0, 13);
        jPanel2.add(btnEdit, gridBagConstraints);

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 13, 0, 13);
        jPanel2.add(btnHapus, gridBagConstraints);

        btnBatal.setText("Batal");
        btnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 13, 0, 13);
        jPanel2.add(btnBatal, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipady = 20;
        jPanel1.add(jPanel2, gridBagConstraints);

        jButton1.setText("Kembali");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.insets = new java.awt.Insets(0, 18, 0, 0);
        jPanel1.add(jButton1, gridBagConstraints);

        jScrollPane2.setMinimumSize(new java.awt.Dimension(300, 174));
        jScrollPane2.setOpaque(false);
        jScrollPane2.setPreferredSize(new java.awt.Dimension(300, 174));

        tblKRS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblKRS.setFocusable(false);
        tblKRS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKRSMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblKRS);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(7, 20, 7, 20);
        jPanel1.add(jScrollPane2, gridBagConstraints);

        lblHarga1.setText("Nama Mata Kuliah");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipady = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 13, 0, 6);
        jPanel1.add(lblHarga1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.insets = new java.awt.Insets(8, 47, 8, 19);
        jPanel1.add(txtNamaMK, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(6, 47, 6, 18);
        jPanel1.add(cmbMahasiswa, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents


    
    private void txtKodeMKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKodeMKActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKodeMKActionPerformed

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
    int selectedIndex = cmbMahasiswa.getSelectedIndex();

if (selectedIndex == -1) {
    JOptionPane.showMessageDialog(this, "Pilih mahasiswa!", "Kesalahan", JOptionPane.ERROR_MESSAGE);
    return;
}

int idMahasiswa = idMahasiswaList.get(selectedIndex); // Ambil ID mahasiswa berdasarkan indeks
String kodeMk = txtKodeMK.getText();
String namaMk = txtNamaMK.getText();
String sksText = txtSKS.getText();

// Validasi agar SKS harus berupa angka
int sks = 0;
try {
    sks = Integer.parseInt(sksText);
} catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(this, "SKS harus berupa angka!", "Kesalahan", JOptionPane.ERROR_MESSAGE);
    return;
}

if (kodeMk.isEmpty() || namaMk.isEmpty() || sks == 0) {
    JOptionPane.showMessageDialog(this, "Harap lengkapi semua data!", "Kesalahan", JOptionPane.ERROR_MESSAGE);
    return;
}

KRSModel krs = new KRSModel(0, idMahasiswa, kodeMk, namaMk, sks);
KRSDAO dao = new KRSDAO();
boolean success = dao.addKRS(krs);

if (success) {
    JOptionPane.showMessageDialog(this, "Data KRS berhasil ditambah", "Sukses", JOptionPane.INFORMATION_MESSAGE);
    clearFields();
    loadTable();
} else {
    JOptionPane.showMessageDialog(this, "Gagal menambah data KRS", "Kesalahan", JOptionPane.ERROR_MESSAGE);
}

    }//GEN-LAST:event_btnTambahActionPerformed

    
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
    // Ambil data dari form
String idKrsText = txtIDKRS.getText();
int selectedIndex = cmbMahasiswa.getSelectedIndex();

// Validasi ID KRS, jika kosong tampilkan pesan error
if (idKrsText.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Pilih data KRS yang akan diedit (ID KRS kosong)!", "Kesalahan", JOptionPane.ERROR_MESSAGE);
    return;
}

int idKrs = Integer.parseInt(idKrsText);

if (selectedIndex == -1) {
    JOptionPane.showMessageDialog(this, "Pilih mahasiswa!", "Kesalahan", JOptionPane.ERROR_MESSAGE);
    return;
}

int idMahasiswa = idMahasiswaList.get(selectedIndex); // Ambil ID mahasiswa berdasarkan indeks
String kodeMk = txtKodeMK.getText();
String namaMk = txtNamaMK.getText();
String sksText = txtSKS.getText();

// Validasi agar SKS harus berupa angka
int sks = 0;
try {
    sks = Integer.parseInt(sksText);
} catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(this, "SKS harus berupa angka!", "Kesalahan", JOptionPane.ERROR_MESSAGE);
    return;
}

// Validasi input
if (kodeMk.isEmpty() || namaMk.isEmpty() || sks == 0) {
    JOptionPane.showMessageDialog(this, "Harap lengkapi semua data!", "Kesalahan", JOptionPane.ERROR_MESSAGE);
    return;
}

// Buat model KRS baru untuk diubah
KRSModel krs = new KRSModel(idKrs, idMahasiswa, kodeMk, namaMk, sks);

// Update data KRS melalui DAO
KRSDAO dao = new KRSDAO();
boolean success = dao.updateKRS(krs);

// Berikan respons kepada pengguna
if (success) {
    JOptionPane.showMessageDialog(this, "Data KRS berhasil diubah", "Sukses", JOptionPane.INFORMATION_MESSAGE);
    clearFields();
    loadTable(); // Memperbarui tabel
} else {
    JOptionPane.showMessageDialog(this, "Gagal mengubah data KRS", "Kesalahan", JOptionPane.ERROR_MESSAGE);
}
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
    int selectedRow = tblKRS.getSelectedRow();

    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Pilih data KRS yang ingin dihapus!", "Kesalahan", JOptionPane.ERROR_MESSAGE);
        return;
    }

    int idKrs = (int) tblKRS.getValueAt(selectedRow, 0);
    KRSDAO dao = new KRSDAO();
    boolean success = dao.deleteKRS(idKrs);

    if (success) {
        JOptionPane.showMessageDialog(this, "Data KRS berhasil dihapus", "Sukses", JOptionPane.INFORMATION_MESSAGE);
        loadTable();
    } else {
        JOptionPane.showMessageDialog(this, "Gagal menghapus data KRS", "Kesalahan", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalActionPerformed
    clearFields();
    }//GEN-LAST:event_btnBatalActionPerformed

    private void btnCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCetakActionPerformed
     PrinterJob job = PrinterJob.getPrinterJob();
        job.setPrintable(new KRSPrint(tblKRS));

        if (job.printDialog()) {
            try {
                job.print();
            } catch (PrinterException ex) {
                JOptionPane.showMessageDialog(this, "Gagal mencetak: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnCetakActionPerformed
    
    
    private List<Integer> idMahasiswaList = new ArrayList<>(); // Menyimpan ID mahasiswa

private void populateComboBoxMahasiswa() {
    MahasiswaDAO dao = new MahasiswaDAO();
    List<MahasiswaModel> mahasiswaList = dao.getAllMahasiswa();

    cmbMahasiswa.removeAllItems(); // Bersihkan data combobox
    idMahasiswaList.clear(); // Bersihkan ID mahasiswa

    for (MahasiswaModel mahasiswa : mahasiswaList) {
        cmbMahasiswa.addItem(mahasiswa.getNama()); // Tambahkan nama ke combobox
        idMahasiswaList.add(mahasiswa.getIdMahasiswa()); // Simpan ID ke daftar
    }
}

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    
    
    private void tblKRSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKRSMouseClicked
      int selectedRow = tblKRS.getSelectedRow();

    // Ambil data dari JTable
    Object idkrsObj = tblKRS.getValueAt(selectedRow, 0);  // Kolom pertama
    Object idmhsObj = tblKRS.getValueAt(selectedRow, 1);  // Kolom kedua
    Object kdmkObj = tblKRS.getValueAt(selectedRow, 2);   // Kolom ketiga
    Object nmmkObj = tblKRS.getValueAt(selectedRow, 3);   // Kolom keempat
    Object sksObj = tblKRS.getValueAt(selectedRow, 4);    // Kolom kelima

    // Periksa apakah nilai tidak null
    if (idkrsObj != null && idmhsObj != null && kdmkObj != null && nmmkObj != null && sksObj != null) {
        // Ambil dan konversi nilai
        int idKrs = Integer.parseInt(idkrsObj.toString());
        int idMahasiswa = Integer.parseInt(idmhsObj.toString());
        String kodeMk = kdmkObj.toString();
        String namaMk = nmmkObj.toString();
        int sks = Integer.parseInt(sksObj.toString());

        // Set nilai ke JTextField
        txtIDKRS.setText(String.valueOf(idKrs));
        txtKodeMK.setText(kodeMk);
        txtNamaMK.setText(namaMk);
        txtSKS.setText(String.valueOf(sks));

        // Cari dan pilih mahasiswa di cmbMahasiswa
        for (int i = 0; i < idMahasiswaList.size(); i++) {
            if (idMahasiswaList.get(i) == idMahasiswa) {
                cmbMahasiswa.setSelectedIndex(i);
                break;
            }
        }
    } else {
        JOptionPane.showMessageDialog(this, "Data yang dipilih tidak lengkap", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_tblKRSMouseClicked
    private void loadTable() {
        KRSDAO dao = new KRSDAO();
        List<KRSModel> krsList = dao.getAllKRS();

        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID KRS");
        model.addColumn("ID Mahasiswa");
        model.addColumn("Kode MK");
        model.addColumn("Nama MK");
        model.addColumn("SKS");

        for (KRSModel krs : krsList) {
            model.addRow(new Object[]{
                    krs.getIdKrs(),
                    krs.getIdMahasiswa(),
                    krs.getKodeMk(),
                    krs.getNamaMk(),
                    krs.getSks()
            });
        }

        tblKRS.setModel(model);
    }

private void clearFields() {
        txtIDKRS.setText("");
        txtKodeMK.setText("");
        txtNamaMK.setText("");
        txtSKS.setText("");
    }
    /**
     * @param args the command line arguments
     */
    
    
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KRSUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KRSUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KRSUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KRSUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KRSUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBatal;
    private javax.swing.JButton btnCetak;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnTambah;
    private javax.swing.JComboBox<String> cmbMahasiswa;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblHarga;
    private javax.swing.JLabel lblHarga1;
    private javax.swing.JLabel lblIdBuku;
    private javax.swing.JLabel lblJudul;
    private javax.swing.JLabel lblPengarang;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblKRS;
    private javax.swing.JTextField txtIDKRS;
    private javax.swing.JTextField txtKodeMK;
    private javax.swing.JTextField txtNamaMK;
    private javax.swing.JTextField txtSKS;
    // End of variables declaration//GEN-END:variables
}
