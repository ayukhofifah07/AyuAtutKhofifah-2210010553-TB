
package ui;
import dao.MahasiswaDAO;
import model.MahasiswaModel;
import utils.MahasiswaPrint;

import java.awt.print.*;
import javax.swing.*;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import java.awt.print.PrinterJob;
import java.awt.print.PrinterException;



public class MahasiswaUI extends javax.swing.JFrame {

    /**
     * Creates new form FormBuku
     */
    public MahasiswaUI() {
        initComponents();
        loadTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lblTitle = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblIdBuku = new javax.swing.JLabel();
        lblJudul = new javax.swing.JLabel();
        lblPengarang = new javax.swing.JLabel();
        lblHarga = new javax.swing.JLabel();
        btnCetak = new javax.swing.JButton();
        txtID = new javax.swing.JTextField();
        txtNIM = new javax.swing.JTextField();
        txtNama = new javax.swing.JTextField();
        txtJurusan = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        btnTambah = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnBatal = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMahasiswa = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(100, 341));

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("FORM MAHASISWA");
        getContentPane().add(lblTitle, java.awt.BorderLayout.PAGE_START);

        jPanel1.setPreferredSize(new java.awt.Dimension(700, 500));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        lblIdBuku.setText("ID Mahasiswa");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipady = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 13, 0, 6);
        jPanel1.add(lblIdBuku, gridBagConstraints);

        lblJudul.setText("NIM");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipady = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 13, 0, 6);
        jPanel1.add(lblJudul, gridBagConstraints);

        lblPengarang.setText("Nama");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipady = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 13, 0, 6);
        jPanel1.add(lblPengarang, gridBagConstraints);

        lblHarga.setText("Jurusan");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipady = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 13, 0, 6);
        jPanel1.add(lblHarga, gridBagConstraints);

        btnCetak.setText("Cetak");
        btnCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCetakActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 6, 0);
        jPanel1.add(btnCetak, gridBagConstraints);

        txtID.setEditable(false);
        txtID.setFocusable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.insets = new java.awt.Insets(8, 47, 8, 19);
        jPanel1.add(txtID, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.insets = new java.awt.Insets(8, 47, 8, 19);
        jPanel1.add(txtNIM, gridBagConstraints);

        txtNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.insets = new java.awt.Insets(8, 47, 8, 19);
        jPanel1.add(txtNama, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.insets = new java.awt.Insets(8, 47, 8, 19);
        jPanel1.add(txtJurusan, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 13, 0, 13);
        jPanel2.add(btnTambah, gridBagConstraints);

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 13, 0, 13);
        jPanel2.add(btnEdit, gridBagConstraints);

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 13, 0, 13);
        jPanel2.add(btnHapus, gridBagConstraints);

        btnBatal.setText("Batal");
        btnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 13, 0, 13);
        jPanel2.add(btnBatal, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipady = 20;
        jPanel1.add(jPanel2, gridBagConstraints);

        jButton1.setText("Kembali");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(0, 18, 0, 0);
        jPanel1.add(jButton1, gridBagConstraints);

        jScrollPane2.setMinimumSize(new java.awt.Dimension(300, 174));
        jScrollPane2.setOpaque(false);
        jScrollPane2.setPreferredSize(new java.awt.Dimension(300, 174));

        tblMahasiswa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblMahasiswa.setFocusable(false);
        tblMahasiswa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMahasiswaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblMahasiswa);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(7, 20, 7, 20);
        jPanel1.add(jScrollPane2, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaActionPerformed

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
      String nim = txtNIM.getText();
    String nama = txtNama.getText();
    String jurusan = txtJurusan.getText();

    if (nim.isEmpty() || nama.isEmpty() || jurusan.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Harap lengkapi semua data!", "Kesalahan", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Validasi NIM hanya angka
    if (!nim.matches("[0-9]+")) {  // Memastikan NIM hanya terdiri dari angka
        JOptionPane.showMessageDialog(this, "NIM harus berupa angka!", "Kesalahan", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // ID mahasiswa bisa diatur sebagai 0, karena akan di-generate oleh database saat insert
    MahasiswaModel mahasiswa = new MahasiswaModel(0, nim, nama, jurusan);

    MahasiswaDAO dao = new MahasiswaDAO();
    boolean success = dao.addMahasiswa(mahasiswa);  // Sesuaikan dengan method insert pada MahasiswaDAO

    if (success) {
        JOptionPane.showMessageDialog(this, "Data Mahasiswa berhasil ditambah", "Sukses", JOptionPane.INFORMATION_MESSAGE);
        clearFields();
        loadTable();
    } else {
        JOptionPane.showMessageDialog(this, "Gagal menambah data Mahasiswa", "Kesalahan", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnTambahActionPerformed

    public void printTable() {
    
}
    
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
    // Ambil data dari JTextField
String idText = txtID.getText();
String nim = txtNIM.getText();
String nama = txtNama.getText();
String jurusan = txtJurusan.getText();

// Validasi ID, jika kosong tampilkan pesan error
if (idText.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Pilih data yang akan diedit (ID kosong)!", "Kesalahan", JOptionPane.ERROR_MESSAGE);
    return;
}

int id = Integer.parseInt(idText);

if (nim.isEmpty() || nama.isEmpty() || jurusan.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Harap lengkapi semua data!", "Kesalahan", JOptionPane.ERROR_MESSAGE);
    return;
}

// Buat model mahasiswa baru untuk update
MahasiswaModel mahasiswa = new MahasiswaModel(id, nim, nama, jurusan);

// Panggil DAO untuk mengupdate data mahasiswa
MahasiswaDAO dao = new MahasiswaDAO();
boolean success = dao.updateMahasiswa(mahasiswa);

if (success) {
    JOptionPane.showMessageDialog(this, "Data Mahasiswa berhasil diubah", "Sukses", JOptionPane.INFORMATION_MESSAGE);
    clearFields();
    loadTable();  // Memperbarui tabel
} else {
    JOptionPane.showMessageDialog(this, "Gagal mengubah data Mahasiswa", "Kesalahan", JOptionPane.ERROR_MESSAGE);
}
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
      int selectedRow = tblMahasiswa.getSelectedRow();
    
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Pilih mahasiswa yang ingin dihapus!", "Kesalahan", JOptionPane.ERROR_MESSAGE);
        return;
    }

    int id = (int) tblMahasiswa.getValueAt(selectedRow, 0);  // Ambil ID dari tabel
    
    // Panggil DAO untuk menghapus data mahasiswa
    MahasiswaDAO dao = new MahasiswaDAO();
    boolean success = dao.deleteMahasiswa(id);

    if (success) {
        JOptionPane.showMessageDialog(this, "Data Mahasiswa berhasil dihapus", "Sukses", JOptionPane.INFORMATION_MESSAGE);
        loadTable();  // Memperbarui tabel
    } else {
        JOptionPane.showMessageDialog(this, "Gagal menghapus data Mahasiswa", "Kesalahan", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalActionPerformed
    clearFields();
    }//GEN-LAST:event_btnBatalActionPerformed

    private void btnCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCetakActionPerformed
      PrinterJob job = PrinterJob.getPrinterJob();
    job.setPrintable(new MahasiswaPrint(tblMahasiswa));
    
    if (job.printDialog()) {
        try {
            job.print();
        } catch (PrinterException ex) {
            JOptionPane.showMessageDialog(this,
                "Gagal mencetak: " + ex.getMessage(),
                "Error",
                JOptionPane.ERROR_MESSAGE);
        }
    }
    }//GEN-LAST:event_btnCetakActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    
    
    private void tblMahasiswaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMahasiswaMouseClicked
     int selectedRow = tblMahasiswa.getSelectedRow();
    
    // Ambil data dari JTable
    Object idObj = tblMahasiswa.getValueAt(selectedRow, 0);  // Kolom pertama (ID)
    Object nimObj = tblMahasiswa.getValueAt(selectedRow, 1);  // Kolom kedua (NIM)
    Object namaObj = tblMahasiswa.getValueAt(selectedRow, 2); // Kolom ketiga (Nama)
    Object jurusanObj = tblMahasiswa.getValueAt(selectedRow, 3); // Kolom keempat (Jurusan)

    // Periksa apakah nilai tidak null
    if (idObj != null && nimObj != null && namaObj != null && jurusanObj != null) {
        int id = Integer.parseInt(idObj.toString());  // Mengubah idObj menjadi int
        String nim = nimObj.toString();
        String nama = namaObj.toString();
        String jurusan = jurusanObj.toString();
        
        // Mengirim data ke JTextField
        txtID.setText(String.valueOf(id));  // Mengubah int ke String dan mengisinya ke txtId
        txtNIM.setText(nim);  // txtNim adalah JTextField untuk NIM
        txtNama.setText(nama);  // txtNama adalah JTextField untuk Nama
        txtJurusan.setText(jurusan);  // txtJurusan adalah JTextField untuk Jurusan
    } else {
        JOptionPane.showMessageDialog(this, "Data yang dipilih tidak lengkap", "Error", JOptionPane.ERROR_MESSAGE);
    }
    
    }//GEN-LAST:event_tblMahasiswaMouseClicked
private void loadTable() {
    MahasiswaDAO dao = new MahasiswaDAO();
    List<MahasiswaModel> mahasiswaList = dao.getAllMahasiswa();
    
    // Membuat model untuk tabel
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("ID Mahasiswa");
    model.addColumn("NIM");
    model.addColumn("Nama");
    model.addColumn("Jurusan");

    for (MahasiswaModel mahasiswa : mahasiswaList) {
        model.addRow(new Object[] {
            mahasiswa.getIdMahasiswa(),
            mahasiswa.getNim(),
            mahasiswa.getNama(),
            mahasiswa.getJurusan()
        });
    }

    tblMahasiswa.setModel(model);
}

private void clearFields() {
    txtID.setText("");
    txtNIM.setText("");
    txtNama.setText("");
    txtJurusan.setText("");
}
    /**
     * @param args the command line arguments
     */
    
    
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MahasiswaUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MahasiswaUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MahasiswaUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MahasiswaUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MahasiswaUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBatal;
    private javax.swing.JButton btnCetak;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnTambah;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblHarga;
    private javax.swing.JLabel lblIdBuku;
    private javax.swing.JLabel lblJudul;
    private javax.swing.JLabel lblPengarang;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblMahasiswa;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtJurusan;
    private javax.swing.JTextField txtNIM;
    private javax.swing.JTextField txtNama;
    // End of variables declaration//GEN-END:variables
}
